The steps provided here are for install the source code on CentOS.

0.) Create a directory to install the source code
$ mkdir roccc/
$ cd roccc/
$ export DIR=$PWD

1.) Install and verify a pre-compiled distribution. This step is 
   recommended to interface with the Eclipse GUI.

2.) Copy the dependency and source files to the install directory
$ cp gcc-4.0.2.modified.tar.gz $DIR
$ cp llvm-gcc4.2-2.3-x86_64-linux-CentOS.tar.gz $DIR
$ cp -r roccc-compiler/ $DIR

3.) Install the modified gcc-4.0.2 compiler
$ cd $DIR
$ tar -zxvf gcc-4.0.2.modified.tar.gz
$ mkdir gcc-4.0.2-build gcc-4.0.2-install
$ cd gcc-4.0.2-build
$ ../gcc-4.0.2/configure --enable-languages=c,c++ --prefix=$DIR/gcc-4.0.2-install --disable-multilib
$ make
$ make install

4.) Install the llvm-gcc4.2 compiler
$ cd $DIR
$ tar -zxvf llvm-gcc4.2-2.3-x86_64-linux-CentOS.tar.gz
$ export LLVM_GCC_EXE=$DIR/llvm-gcc4.2-2.3-x86_64-linux-CentOS/bin/x86_64-unknown-linux-gnu-llvm-gcc

5.) Compile Hi-CIRRF code
$ cd $DIR
$ cd roccc-compiler/src/
$ ./install-roccc --with-CC_CXX_PATH=$DIR/gcc-4.0.2-install/bin/
$ source ../use_suif.sh
$ make
$ make

6.) Compile SQLite database
$ cd $DIR
$ cd roccc-compiler/src/llvm-2.3/sqlite-3.6.11
$ ./configure
$ make

7.) Compile Lo-CIRRF code
$ cd $DIR
$ cd roccc-compiler/src/llvm-2.3
$ export LLVM_PATH=$PWD
$ ./configure --enable-optimized --enable-targets=cbe,cpp
$ make

8.) Compile tools
$ cd $DIR
$ cd roccc-compiler/src/tools/
$ make

9.) Update the bin/ and lib/ files
* do not change gcc2suif

10.) Final setups
* Source use_suif.sh in the .bashrc file
* export LLVM_PATH in the .bashrc file
