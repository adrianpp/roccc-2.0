Installing ROCCC:

1.) Install a valid ROCCC Binary
   $ tar -zxvf roccc-0.7.5-distribution-CentOS64.tar.gz
   $ cd roccc-0.7.5-distribution-CentOS64/

2.) Install the modified gcc-4.0.2 compiler
   $ export DIR=$PWD
   $ tar -zxvf gcc-4.0.2.modified.tar.gz
   $ mkdir gcc-4.0.2-build gcc-4.0.2-install
   $ cd gcc-4.0.2-build
   $ ../gcc-4.0.2/configure --enable-languages=c,c++ --prefix=$DIR/gcc-4.0.2-install --disable-multilib
   $ make
   $ make install

3.) Install the llvm-gcc4.2 compiler
   $ cd $DIR
   $ tar -zxvf llvm-gcc4.2-2.3-x86_64-linux-CentOS.tar.gz
   $ export LLVM_GCC_EXE=$DIR/llvm-gcc4.2-2.3-x86_64-linux-CentOS/bin/x86_64-unknown-linux-gnu-llvm-gcc

4.) Compile Hi-CIRRF code
   $ cd $DIR
   $ cd chat-compiler-X.X.X/src/
   $ ./install-roccc --with-CC_CXX_PATH=$DIR/gcc-4.0.2-install/bin/ --FORCE
   $ source ../use_suif.sh
   $ make

5.) Compile SQLite database
   $ cd $DIR
   $ cd chat-compiler-X.X.X/src/llvm-2.3/sqlite-3.6.11
   $ ./configure
   $ make

6.) Compile Lo-CIRRF code
   $ cd $DIR
   $ cd chat-compiler-X.X.X/src/llvm-2.3
   $ export LLVM_PATH=$PWD
   $ ./configure --enable-optimized --enable-targets=cbe,cpp
   $ make

7.) Compile tools
   $ cd $DIR
   $ cd chat-compiler-X.X.X/tools/8.) Compile tools
   $ make

8.) Overwrite the bin/ and lib/ directories from the binary install with the compiled versions.

9.) Final setups
   * Source use_suif.sh in the .bashrc file
   * export LLVM_PATH in the .bashrc file
   * update eclipses .JAR file with the one from CHAT
